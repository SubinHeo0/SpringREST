REST.txt

REST(Representational State Teansfer) : 서버와 통신하는 방법
=>핵심 데이터 & 기능형태를 외부에서 활용가능하도록 제공하는 방식

-> * URI는 동사(x) 명사-복수(o) 구성해야함
   * URI 마지막은 /를 사용할 수 없음
   * 소문자 구성, _(x) -(o) 데이터 연결
   * 리소스 관계를 표시  자원/id/자원 구성
   
   
   제약조건
   1. Client-Server : 요청,제공 측은 표준 인터페이스의 형태로 구현 (상호독립적)
   2. Stateless : 클라이언트의 컨텍스트가 서버에 저장없이, 클라이언트에만 저장
   3. Cacheable : 서버의 응답을 캐싱 할수 있어야함
   4. Layered System : 클라이언트와 서버 사이의 부하를 분산
   5. Code On Demand : 클라이언트가 수행가능한 부분을 스크립트로 제공
   
   
   @ResponseBody - spring3 지원
   @RestController - spring4 지원
   
   
   * RestController는 별도의 view페이지가 없기 때문에 결과에 따른 상태를
   알기가 어렵다.
    => HTTP status를 사용한 데이터 처리 결과를 표시
    
    HTTP 응답 코드는 5개의 클래스(분류)로 구분된다. 
    상태 코드의 첫 번째 숫자는 응답의 클래스를 정의한다.

	1xx (정보): 요청을 받았으며 프로세스를 계속한다
	100 : 데이터중 일부만 서버가 전송받은 상태 
	
	2xx (성공): 요청을 성공적으로 받았으며 인식했고 수용하였다
	200 : 에러없이 정상 처리
	204 : 정상처리긴 하나,서버에서 보내줄 데이터가 없음 
	
	3xx (리다이렉션): 요청 완료를 위해 추가 작업 조치가 필요하다
	301 : 요청된 페이지가 새 URL이 변경
	304 : 이미 기존의 데이터와 차이가 없음(변경x)
	
	4xx (클라이언트 오류): 요청의 문법이 잘못되었거나 요청을 처리할 수 없다
	400 : 전송된 요청(request)에 문제가 있어서 서버를 인식 불가
	403 : 서버에서 허락없는 접근(방화벽)
	404 : URL에 해당하는 정보를 찾을수 없음
	406 : 전송방식이 허락되지 않음 (REST 방식호출)
	
	5xx (서버 오류): 서버가 명백히 유효한 요청에 대해 충족을 실패했다
	500 : 서버에서 처리시 문제 발생
	502 : 게이트웨이/ 프록시상태 문제 (과부화)
	503 : 일시적인 서버 과부화, 서비스 중단상태
	504 : 지정된 처리시간을 지나서 처리할 수 없음
	
	=> ResponseEntity 객체 제공(스프링)
	  ( 결과데이터 + HTTP 상태코드를 동시 제어하는 클래스)
   
   
   
   * REST 컨트롤러에서의 HTTP메서드 의미
   
    POST - 추가 (Create)
    GET - 조회 (Select/read)
    PUT - 수정(전체) (Update) / PATHCH (일부수정)
    DELETE - 삭제 (Delete)
     
   * REST 방식 주소구현 형태
   [ /작업명/기본키 + 메서드 + 데이터 ]
   
   작업명 : 요청하는 작업의 종류 (members/boards/goods....)
   기본키 : 요청 작업에 해당하는 대상의 기본키
   데이터 : 기능수행에 필요한 JSON데이터
   
   
   ex)  URI : /boards + 데이터  (POST)  : 글쓰기
   ex)  URI : /boards		    (GET)  : 전체 글정보 조회
   ex)  URI : /boards/100	    (GET)  : 100번 글정보 조회
   ex)  URI : /boards/100	    (DELETE)  : 100번 글정보 삭제
   ex)  URI : /boards/100 +데이터   (PUT)  : 100번 글정보 수정
   
   
   
   
   
   
   
   
   
   
   
